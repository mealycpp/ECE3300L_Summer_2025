`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 06/20/2025 11:33:58 AM
// Design Name: 
// Module Name: decoder4x16_behave
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module decoder4x16_behave(input wire E, input wire [3:0] sw, output reg [15:0] led);
    always @(*) begin
        led = 16'b0; //Resets all output to 0
        if (E) begin //Only decode when Enabled
            case(sw) //Decode based on 4 bit input
                4'b0000: led = 16'b0000_0000_0000_0001; // Output 0 active
                4'b0001: led = 16'b0000_0000_0000_0010; // Output 1 active
                4'b0010: led = 16'b0000_0000_0000_0100; // Output 2 active
                4'b0011: led = 16'b0000_0000_0000_1000; // Output 3 active
                4'b0100: led = 16'b0000_0000_0001_0000; // Output 4 active
                4'b0101: led = 16'b0000_0000_0010_0000; // Output 5 active
                4'b0110: led = 16'b0000_0000_0100_0000; // Output 6 active
                4'b0111: led = 16'b0000_0000_1000_0000; // Output 7 active
                4'b1000: led = 16'b0000_0001_0000_0000; // Output 8 active
                4'b1001: led = 16'b0000_0010_0000_0000; // Output 9 active
                4'b1010: led = 16'b0000_0100_0000_0000; // Output 10 active
                4'b1011: led = 16'b0000_1000_0000_0000; // Output 11 active
                4'b1100: led = 16'b0001_0000_0000_0000; // Output 12 active
                4'b1101: led = 16'b0010_0000_0000_0000; // Output 13 active
                4'b1110: led = 16'b0100_0000_0000_0000; // Output 14 active
                4'b1111: led = 16'b1000_0000_0000_0000; // Output 15 active
            endcase
        end
    end
endmodule